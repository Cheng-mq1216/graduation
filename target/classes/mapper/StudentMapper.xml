<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lynu.mapper.StudentMapper">
  <resultMap id="BaseResultMap" type="cn.lynu.model.Student">
    <id column="student_id" jdbcType="CHAR" property="studentId" />
    <result column="project_num" jdbcType="INTEGER" property="projectNum" />
    <result column="good_boy" jdbcType="INTEGER" property="goodBoy" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="teacher_id" jdbcType="CHAR" property="teacherId" />
    <result column="user_id" jdbcType="CHAR" property="userId" />
    <result column="class_id" jdbcType="INTEGER" property="classId" />
    <result column="student_source" jdbcType="INTEGER" property="studentSource" />
    <result column="teacher_evaluate" jdbcType="VARCHAR" property="teacherEvaluate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    student_id, project_num, good_boy, project_id, teacher_id, user_id, class_id, student_source, 
    teacher_evaluate
  </sql>
  <select id="selectByExample" parameterType="cn.lynu.model.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where student_id = #{studentId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from student
    where student_id = #{studentId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.lynu.model.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.lynu.model.Student">
    insert into student (student_id, project_num, good_boy, 
      project_id, teacher_id, user_id, 
      class_id, student_source, teacher_evaluate
      )
    values (#{studentId,jdbcType=CHAR}, #{projectNum,jdbcType=INTEGER}, #{goodBoy,jdbcType=INTEGER}, 
      #{projectId,jdbcType=INTEGER}, #{teacherId,jdbcType=CHAR}, #{userId,jdbcType=CHAR}, 
      #{classId,jdbcType=INTEGER}, #{studentSource,jdbcType=INTEGER}, #{teacherEvaluate,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.lynu.model.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        student_id,
      </if>
      <if test="projectNum != null">
        project_num,
      </if>
      <if test="goodBoy != null">
        good_boy,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="studentSource != null">
        student_source,
      </if>
      <if test="teacherEvaluate != null">
        teacher_evaluate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        #{studentId,jdbcType=CHAR},
      </if>
      <if test="projectNum != null">
        #{projectNum,jdbcType=INTEGER},
      </if>
      <if test="goodBoy != null">
        #{goodBoy,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=CHAR},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="studentSource != null">
        #{studentSource,jdbcType=INTEGER},
      </if>
      <if test="teacherEvaluate != null">
        #{teacherEvaluate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.lynu.model.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=CHAR},
      </if>
      <if test="record.projectNum != null">
        project_num = #{record.projectNum,jdbcType=INTEGER},
      </if>
      <if test="record.goodBoy != null">
        good_boy = #{record.goodBoy,jdbcType=INTEGER},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=CHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=CHAR},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
      <if test="record.studentSource != null">
        student_source = #{record.studentSource,jdbcType=INTEGER},
      </if>
      <if test="record.teacherEvaluate != null">
        teacher_evaluate = #{record.teacherEvaluate,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set student_id = #{record.studentId,jdbcType=CHAR},
      project_num = #{record.projectNum,jdbcType=INTEGER},
      good_boy = #{record.goodBoy,jdbcType=INTEGER},
      project_id = #{record.projectId,jdbcType=INTEGER},
      teacher_id = #{record.teacherId,jdbcType=CHAR},
      user_id = #{record.userId,jdbcType=CHAR},
      class_id = #{record.classId,jdbcType=INTEGER},
      student_source = #{record.studentSource,jdbcType=INTEGER},
      teacher_evaluate = #{record.teacherEvaluate,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lynu.model.Student">
    update student
    <set>
      <if test="projectNum != null">
        project_num = #{projectNum,jdbcType=INTEGER},
      </if>
      <if test="goodBoy != null">
        good_boy = #{goodBoy,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=CHAR},
      </if>
      <if test="classId != null">
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="studentSource != null">
        student_source = #{studentSource,jdbcType=INTEGER},
      </if>
      <if test="teacherEvaluate != null">
        teacher_evaluate = #{teacherEvaluate,jdbcType=VARCHAR},
      </if>
    </set>
    where student_id = #{studentId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lynu.model.Student">
    update student
    set project_num = #{projectNum,jdbcType=INTEGER},
      good_boy = #{goodBoy,jdbcType=INTEGER},
      project_id = #{projectId,jdbcType=INTEGER},
      teacher_id = #{teacherId,jdbcType=CHAR},
      user_id = #{userId,jdbcType=CHAR},
      class_id = #{classId,jdbcType=INTEGER},
      student_source = #{studentSource,jdbcType=INTEGER},
      teacher_evaluate = #{teacherEvaluate,jdbcType=VARCHAR}
    where student_id = #{studentId,jdbcType=CHAR}
  </update>
  
  <resultMap type="cn.lynu.model.Student" id="studentPlus" extends="BaseResultMap">
  	<association property="user" column="user_id" select="cn.lynu.mapper.UserMapper.selectByPrimaryKey"></association>
  </resultMap>
  <select id="getStudentByUserId" resultMap="studentPlus">
  	select 
  	 <include refid="Base_Column_List" />
    from student
    where user_id = #{userId}
  </select>
  <select id="getStudentByStudentId" resultMap="studentPlus">
  	select 
  	 <include refid="Base_Column_List" />
    from student
    where student_id = #{studentId}
  </select>
  
  <select id="getUserByStudentId" resultType="cn.lynu.model.User">
  	SELECT user.* from user,student WHERE user.user_id=student.user_id and student.student_id=#{studentId}
  </select>
  
  <update id="updateProjectNum">
  	update student set project_num=1,teacher_id=#{teacherId},project_id=#{projectId} where student_id=#{studentId}
  </update>
  
  <update id="updateNoProjectNum">
  	update student set project_num=0,teacher_id=NULL,project_id=NULL where student_id=#{studentId}
  </update>
  
</mapper>